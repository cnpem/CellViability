import pandas


def summarize(
    results_directory: str, image_filepath: str = "results/Image.csv"
) -> pandas.DataFrame:
    """
    Summarize the results of the cell viability analysis.

    Parameters
    ----------
    results_directory : str
        The path to the directory containing the results CSV files.
    image_filepath : str, optional
        The path to the CSV file containing the image data, generated by the
        CellProfiler pipeline, by default "results/Image.csv".

    Returns
    -------
    pandas.DataFrame
        A summary of the results.
    """

    # Read the CSV files
    image_data = pandas.read_csv(image_filepath)

    # Process image data
    image_data["WellName"] = (
        image_data["Metadata_Well"].astype(str).apply(convert_well_name)
    )
    image_data = image_data[["WellName", "Count_Nuclei", "Count_Spots"]]
    image_data.columns = ["WellName", "TotalCells", "TotalSpots"]

    # Process cell data
    cell_data["WellName"] = (
        cell_data["Metadata_Well"].astype(str).apply(convert_well_name)
    )
    cell_data["InfectedCells"] = (cell_data["Children_Spots_Count"] > 3).astype(int)
    cell_data = cell_data[["WellName", "Children_Spots_Count", "InfectedCells"]]
    cell_data.columns = ["WellName", "TotalSpots", "InfectedCells"]

    # Prepare the summary data frame
    summary = image_data.groupby("WellName").agg(
        {"TotalCells": "sum", "TotalSpots": "sum"}
    )
    infected_summary = cell_data.groupby("WellName").agg({"InfectedCells": "sum"})
    summary = summary.join(infected_summary)

    # Calculate additional metrics
    summary["InfectionRate"] = summary["InfectedCells"] / summary["TotalCells"]
    summary["MedianSpotsPerInfectedCell"] = (
        cell_data[cell_data["InfectedCells"] == 1]
        .groupby("WellName")["TotalSpots"]
        .median()
    )

    return summary
